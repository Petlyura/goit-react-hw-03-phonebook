{"version":3,"sources":["components/Layout/Layout.module.css","components/ContactForm/ContactForm.module.css","components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Layout","title","children","className","styles","section","defaultProps","ContactForm","state","name","number","handleInputChange","target","value","setState","handleFormSubmit","event","preventDefault","props","onAddContact","reset","this","onSubmit","phonebookForm","phonebookInput","type","placeholder","onChange","phonebookButton","Component","Filter","filterValue","onFilterChange","ContactListItem","contactName","contactNumber","remove","onClick","ContactList","contacts","onRemove","map","id","App","filter","handleContactAdd","some","contact","alert","contactData","shortid","generate","prevState","handleChangeFilter","handleDeleteContact","contactId","getVisibleContacts","toLowerCase","includes","removeContact","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d4c64e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Layout_section__3BxqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookForm\":\"ContactForm_phonebookForm__3ZIy6\",\"phonebookInput\":\"ContactForm_phonebookInput__2OxIk\",\"phonebookButton\":\"ContactForm_phonebookButton__1p-qE\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from './Layout.module.css'\n\nconst Layout = ({ title, children }) => (\n  <section className={styles.section}>\n    {title && <h2>{title}</h2>}\n    {children}\n  </section>\n);\n\nLayout.defaultProps = {\n  title: \"\",\n};\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n\n    this.props.onAddContact(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit} className={styles.phonebookForm}>\n        <div>\n          <label>\n            Name:\n            <input\n              className={styles.phonebookInput}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Type your name\"\n              value={name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Number:\n            <input\n              className={styles.phonebookInput}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Type your phone number\"\n              value={number}\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className={styles.phonebookButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filterValue, onFilterChange }) => (\n  <div>\n    <label>\n      Search contacts by name\n      <input type=\"text\" value={filterValue} onChange={onFilterChange} />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ contactName, contactNumber, remove }) => {\n  return (\n    <li>\n      <p>\n        {contactName}: {contactNumber}\n      </p>\n\n      <button type=\"button\" onClick={remove}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ContactListItem from \"./ContactListItem\";\n\nconst ContactList = ({ contacts, onRemove }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        const removeContact = () => {\n          onRemove(id);\n        };\n\n        return (\n          <ContactListItem\n            key={id}\n            contactName={name}\n            contactNumber={number}\n            remove={removeContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport Layout from \"./components/Layout\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n\n    if (savedContacts) {\n      this.setState({ contacts: JSON.parse(savedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleContactAdd = (name, number) => {\n    const { contacts } = this.state;\n\n    const isIncludes = contacts.some((contact) => contact.name === name);\n\n    if (isIncludes) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contactData = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contactData],\n    }));\n\n    // const contact = {\n    //   id: shortid.generate(),\n    //   name,\n    //   number,\n    // };\n\n    // const contacts = [...this.state.contacts];\n\n    // for (let i = 0; i < contacts.length; i += 1) {\n    //   if (contacts[i].name === name) {\n    //     alert(`${name} is already in contacts`);\n    //     return;\n    //   }\n    // }\n\n    // this.setState((prevState) => ({\n    //   contacts: [...prevState.contacts, contact],\n    // }));\n  };\n\n  handleChangeFilter = ({ target: { value } }) => {\n    this.setState({ filter: value });\n  };\n\n  handleDeleteContact = (contactId) =>\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Layout title=\"Phonebook\">\n          <ContactForm onAddContact={this.handleContactAdd} />\n        </Layout>\n\n        {visibleContacts.length > 0 && (\n          <Layout title=\"Contacts\">\n            <ContactList\n              contacts={visibleContacts}\n              onRemove={this.removeContact}\n            />\n          </Layout>\n        )}\n\n        {contacts.length > 1 && (\n          <Layout title=\"Find contacts by name\">\n            <Filter\n              filterValue={filter}\n              onFilterChange={this.handleChangeFilter}\n            />\n          </Layout>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}